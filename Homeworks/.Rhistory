plot(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-10,10))
}
else{
lines(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-10,10))
}
#legend("bottomright",title = "x_t Values", c(seq(0, sampleSize, by = 1)),fill=terrain.colors(20), horiz=TRUE)
}
for (s in 1:20){
# Create 100 samples of x_t ~ iid N(0,1)
#x_t <- rnorm(t, mean = 0, sd = varArray[s])
mainDf2$a <- rnorm(sampleSize + 1, mean = 0, sd = 1)
mainDf2$b <- rnorm(sampleSize + 1, mean = 0, sd = 1)
for(k in mainDf2$t){
# Calculate the x_t
mainDf2$x_t[k] <- (mainDf2$a[k]*cos(mainDf2$t[k]))+(mainDf2$b[k]*sin(mainDf2$t[k]))
}
if (s == 1){
plot(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
else{
lines(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
#legend("bottomright",title = "x_t Values", c(seq(0, sampleSize, by = 1)),fill=terrain.colors(20), horiz=TRUE)
}
for (s in 1:20){
# Create 100 samples of x_t ~ iid N(0,1)
#x_t <- rnorm(t, mean = 0, sd = varArray[s])
mainDf2$a <- rnorm(sampleSize + 1, mean = 0, sd = 1)
mainDf2$b <- rnorm(sampleSize + 1, mean = 0, sd = 1)
for(k in mainDf2$t){
# Calculate the x_t
mainDf2$x_t[k] <- (mainDf2$a[k]*cos(mainDf2$t[k]))+(mainDf2$b[k]*sin(mainDf2$t[k]))
}
if (s == 1){
plot(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t),by=0.1), ylim=c(-3,3))
}
else{
lines(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t),by=0.1), ylim=c(-3,3))
}
#legend("bottomright",title = "x_t Values", c(seq(0, sampleSize, by = 1)),fill=terrain.colors(20), horiz=TRUE)
}
View(mainDf)
View(mainDf2)
# plot 20 new x_t in the same plot
for (s in 1:3){
# Create 100 new samples of a and b ~ iid N(0,1)
mainDf2$a <- rnorm(sampleSize + 1, mean = 0, sd = 1)
mainDf2$b <- rnorm(sampleSize + 1, mean = 0, sd = 1)
# Calculate the x_t
for(k in mainDf2$t){
mainDf2$x_t[k] <- (mainDf2$a[k]*cos(mainDf2$t[k]))+(mainDf2$b[k]*sin(mainDf2$t[k]))
}
# plot all in the same plot with different colors
if (s == 1){
plot(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
else{
lines(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
}
# plot 20 new x_t in the same plot
for (s in 1:10){
# Create 100 new samples of a and b ~ iid N(0,1)
mainDf2$a <- rnorm(sampleSize + 1, mean = 0, sd = 1)
mainDf2$b <- rnorm(sampleSize + 1, mean = 0, sd = 1)
# Calculate the x_t
for(k in mainDf2$t){
mainDf2$x_t[k] <- (mainDf2$a[k]*cos(mainDf2$t[k]))+(mainDf2$b[k]*sin(mainDf2$t[k]))
}
# plot all in the same plot with different colors
if (s == 1){
plot(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
else{
lines(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
}
# plot 20 new x_t in the same plot
for (s in 1:10){
# Create 100 new samples of a and b ~ iid N(0,1)
mainDf2$a <- rnorm(sampleSize + 1, mean = 0, sd = 1)
mainDf2$b <- rnorm(sampleSize + 1, mean = 0, sd = 1)
# Calculate the x_t
for(k in mainDf2$t){
mainDf2$x_t[k] <- (mainDf2$a[k]*cos(mainDf2$t[k]))+(mainDf2$b[k]*sin(mainDf2$t[k]))
}
# plot all in the same plot with different colors
if (s == 1){
plot(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
else{
lines(mainDf2$t, mainDf2$x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
}
# plot for x_t vs t for 0 <= t <= 100
plot(mainDf2$t, mainDf2$x_t, type = "l", col = colors()[10])
# plot for x_t vs t for 0 <= t <= 100
plot(mainDf2$t, mainDf2$x_t, type = "l", col = colors()[18])
# plot for x_t vs t for 0 <= t <= 100
plot(mainDf2$t, mainDf2$x_t, type = "l", col = colors()[50])
# plot for x_t vs t for 0 <= t <= 100
t <- mainDf2$t
x_t <- mainDf2$x_t
plot(t, x_t, type = "l", col = colors()[50])
# plot 20 new x_t in the same plot
for (s in 1:20){
# Create 100 new samples of a and b ~ iid N(0,1)
mainDf2$a <- rnorm(sampleSize + 1, mean = 0, sd = 1)
mainDf2$b <- rnorm(sampleSize + 1, mean = 0, sd = 1)
# Calculate the x_t
for(k in mainDf2$t){
mainDf2$x_t[k] <- (mainDf2$a[k]*cos(mainDf2$t[k]))+(mainDf2$b[k]*sin(mainDf2$t[k]))
}
# plot all in the same plot with different colors
t <- mainDf2$t
x_t <- mainDf2$x_t
if (s == 1){
plot(t, x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
else{
lines(t, x_t, type = "l", col= colors()[10*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
}
plot(t, x_t, type = "l", col = colors()[8])
# plot 20 new x_t in the same plot
for (s in 1:20){
# Create 100 new samples of a and b ~ iid N(0,1)
mainDf2$a <- rnorm(sampleSize + 1, mean = 0, sd = 1)
mainDf2$b <- rnorm(sampleSize + 1, mean = 0, sd = 1)
# Calculate the x_t
for(k in mainDf2$t){
mainDf2$x_t[k] <- (mainDf2$a[k]*cos(mainDf2$t[k]))+(mainDf2$b[k]*sin(mainDf2$t[k]))
}
# plot all in the same plot with different colors
t <- mainDf2$t
x_t <- mainDf2$x_t
if (s == 1){
plot(t, x_t, type = "l", col= colors()[8*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
else{
lines(t, x_t, type = "l", col= colors()[8*s], xlim=c(0,length(t)), ylim=c(-3,3))
}
}
install.packages("xlsx")
###################################
# Problem 1
###################################
file <- system.file("tests", "US_Population.xlsx", package = "xlsx")
res <- read.xlsx(file, 1)  # read first sheet
library(xlsx)
library(xlsx)
###################################
# Problem 1
###################################
file <- system.file("tests", "US_Population.xlsx", package = "xlsx")
res <- read.xlsx(file, 1)  # read first sheet
###################################
# Problem 1
###################################
mainDf2 <- data.frame(year = seq(1790, 23, by = 10))
###################################
# Problem 1
###################################
mainDf3<- data.frame(year = seq(1790, 23, by = 10))
###################################
# Problem 1
###################################
mainDf3<- data.frame(year = 1790)
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
}
###################################
# Problem 1
###################################
mainDf3<- data.frame(t = seq(1, 23, by = 1))
mainDf3<- data.frame(year = 1790)
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
}
View(mainDf3)
View(mainDf3)
###################################
# Problem 1
###################################
mainDf3<- data.frame(t = seq(1, 23, by = 1))
mainDf3<- data.frame(year = 1790)
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
}
###################################
# Problem 1
###################################
mainDf3<- data.frame(t = seq(1, 23, by = 1))
mainDf3$year<- data.frame(year = 1790)
mainDf3$year<- 1790
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
}
mainDf3$population<- population[0]
mainDf3$population<- population[1]
population <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
mainDf3$population<- population[0]
mainDf3$population<- population[1]
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
mainDf3$population [i]<- population[i]
}
xDf$x_t <- mainDf3$population
xDf <- data.frame
xDf$x_t <- mainDf3$population
xDf <- data.frame(t = seq(1, 23, by = 1))
xDf$x_t <- mainDf3$population
xDf <- slide(mainDf3,"population", "t", NewVar="xtLag1", slideBy = -1)
# libraries list
#install.packages("DataCombine")
#install.packages("nlme")
library(DataCombine) # for slide function, i.e.: x_t-1
# libraries list
#install.packages("DataCombine")
#install.packages("nlme")
library(DataCombine) # for slide function, i.e.: x_t-1
library(mgcv)
# libraries list
#install.packages("DataCombine")
#install.packages("nlme")
library(DataCombine) # for slide function, i.e.: x_t-1
library(mgcv)
library(xlsx)
xDf <- slide(mainDf3,"population", "t", NewVar="xtLag1", slideBy = -1)
###################################
# Problem 1
###################################
mainDf3<- data.frame(t = seq(1, 23, by = 1))
mainDf3$year<- 1790
pop <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
mainDf3$population <- population[1]
mainDf3$population <- pop[1]
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
mainDf3$population [i]<- population[i]
}
xDf <- data.frame(t = seq(1, 23, by = 1))
xDf$x_t <- mainDf3$population
xDf <- slide(mainDf3,"population", "t", NewVar="xtLag1", slideBy = -1)
pop <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
mainDf3$x_t <- pop[1]
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
mainDf3$x_t [i]<- population[i]
}
xDf <- data.frame(t = seq(1, 23, by = 1))
xDf$x_t <- mainDf3$x_t
xDf <- slide(mainDf3,"x_t", "t", NewVar="xtLag1", slideBy = -1)
View(xDf)
View(xDf)
mainDf3 <- slide(mainDf3,"x_t", "t", NewVar="xtLag1", slideBy = -1)
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
mainDf3$x_t [i]<- pop[i]
}
xDf <- data.frame(t = seq(1, 23, by = 1))
xDf$x_t <- mainDf3$x_t
mainDf3 <- slide(mainDf3,"x_t", "t", NewVar="xtLag1", slideBy = -1)
# Lince Rumainum
# Time Series Analysis
# HW3
# libraries list
#install.packages("DataCombine")
#install.packages("nlme")
library(DataCombine) # for slide function, i.e.: x_t-1
library(mgcv)
library(xlsx)
###################################
# Problem 1
###################################
mainDf3<- data.frame(t = seq(1, 23, by = 1))
mainDf3$year<- 1790
pop <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
mainDf3$x_t <- pop[1]
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
mainDf3$x_t [i]<- pop[i]
}
#xDf <- data.frame(t = seq(1, 23, by = 1))
#xDf$x_t <- mainDf3$x_t
mainDf3 <- slide(mainDf3,"x_t", "t", NewVar="xtLag1", slideBy = -1)
pop <- [3929214,5308483,7239881,9638453,12866020,
pop <- 3929214,5308483,7239881,9638453,12866020,
###################################
# Problem 1
###################################
mainDf3<- data.frame(t = seq(1, 23, by = 1))
mainDf3$year<- 1790
pop <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
mainDf3$x_t <- pop[1]
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
mainDf3$x_t [i]<- pop[i]
}
#xDf <- data.frame(t = seq(1, 23, by = 1))
#xDf$x_t <- mainDf3$x_t
mainDf3 <- slide(mainDf3,"x_t", "t", NewVar="xtLag1", slideBy = -1)
# libraries list
install.packages("DataCombine")
# libraries list
install.packages("DataCombine")
install.packages("DataCombine")
#install.packages("nlme")
library(DataCombine) # for slide function, i.e.: x_t-1
library(mgcv)
###################################
# Problem 1
###################################
mainDf3<- data.frame(t = seq(1, 23, by = 1))
mainDf3$year<- 1790
pop <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
mainDf3$x_t <- pop[1]
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
mainDf3$x_t [i]<- pop[i]
}
#xDf <- data.frame(t = seq(1, 23, by = 1))
#xDf$x_t <- mainDf3$x_t
mainDf3 <- slide(mainDf3,"x_t", "t", NewVar="xtLag1", slideBy = -1)
mainDf3$x_t <- data.frame(population)
population <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
#mainDf3$x_t <- data.frame(population)
#mainDf3$x_t [i] <- population[i]
for (i in 2:23){
mainDf3$year[i] <- mainDf3$year[i-1]+10
mainDf3$x_t [i] <- data.frame(population[i])
}
#xDf <- data.frame(t = seq(1, 23, by = 1))
#xDf$x_t <- mainDf3$x_t
mainDf3 <- slide(mainDf3,"x_t", "t", NewVar="xtLag1", slideBy = -1)
#xDf <- data.frame(t = seq(1, 23, by = 1))
#xDf$x_t <- mainDf3$x_t
do.call(rbind.data.frame, mainDf3$x_t)
mainDf3 <- slide(mainDf3,"x_t", "t", NewVar="xtLag1", slideBy = -1)
# Lince Rumainum
# Time Series Analysis
# HW3
# libraries list
#install.packages("DataCombine")
#install.packages("nlme")
library(DataCombine) # for slide function, i.e.: x_t-1
library(mgcv)
library(xlsx)
###################################
# Problem 1
###################################
mainDf1<- data.frame(t = seq(1, 23, by = 1))
mainDf1$year<- 1790
population <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
#create data frame with year and population data
for (i in 2:23){
mainDf1$year[i] <- mainDf3$year[i-1]+10
mainDf1$x_t [i] <- data.frame(population[i])
}
# Lince Rumainum
# Time Series Analysis
# HW3
# libraries list
#install.packages("DataCombine")
#install.packages("nlme")
library(DataCombine) # for slide function, i.e.: x_t-1
library(mgcv)
library(xlsx)
###################################
# Problem 1
###################################
mainDf1<- data.frame(t = seq(1, 23, by = 1))
mainDf1$year<- 1790
population <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
#create data frame with year and population data
for (i in 2:23){
mainDf1$year[i] <- mainDf3$year[i-1]+10
mainDf1$x_t [i] <- data.frame(population[i])
}
View(mainDf1)
View(mainDf1)
#create data frame with year and population data
for (i in 2:23){
mainDf1$year[i] <- mainDf3$year[i-1]+10
mainDf1$x_t [i] <- data.frame(population[i])
}
#create data frame with year and population data
for (i in 2:23){
mainDf1$year[i] <- mainDf3$year[i-1]+10
mainDf1$x_t [i] <- data.frame(population[i])
}
population <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
#create data frame with year and population data
for (i in 2:23){
mainDf1$year[i] <- mainDf3$year[i-1]+10
mainDf1$x_t [i] <- data.frame(population[i])
}
#create data frame with year and population data
for (i in 2:23){
mainDf1$year[i] <- mainDf3$year[i-1]+10
mainDf1$x_t [i] <- population[i]
}
#create data frame with year and population data
for (i in 2:23){
mainDf1$year[i] <- mainDf3$year[i-1]+10
mainDf1$x_t [i] <- population[i]
}
mainDf1$x_t [1] <- population[1]
#create data frame with year and population data
for (i in 2:23){
mainDf1$year[i] <- mainDf3$year[i-1]+10
mainDf1$x_t [i] <- population[i]
}
# create new column for the x lag of t-1
#do.call(rbind.data.frame, mainDf1$x_t)
mainDf1 <- slide(mainDf1,"x_t", "t", NewVar="xtLag1", slideBy = -1)
###################################
# Problem 1
###################################
mainDf1<- data.frame(t = seq(1, 23, by = 1))
population <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
mainDf1$x_t [1] <- population[1]
mainDf1$year<- 1790
#create data frame with year and population data
for (i in 2:23){
mainDf1$x_t [i] <- population[i]
mainDf1$year[i] <- mainDf3$year[i-1]+10
}
# create new column for the x lag of t-1
#do.call(rbind.data.frame, mainDf1$x_t)
mainDf1 <- slide(mainDf1,"x_t", "t", NewVar="xtLag1", slideBy = -1)
# libraries list
install.packages("DataCombine")
install.packages("DataCombine")
# Lince Rumainum
# Time Series Analysis
# HW3
# libraries list
install.packages("DataCombine")
#install.packages("nlme")
library(DataCombine) # for slide function, i.e.: x_t-1
library(mgcv)
library(xlsx)
###################################
# Problem 1
###################################
mainDf1<- data.frame(t = seq(1, 23, by = 1))
population <- list(3929214,5308483,7239881,9638453,12866020,
17069453,23191876,31443321,39818449,50155783,62947714,
75994575,91972266, 105710620,122775046,131669275,
150697361,179323175,203302031,226545805,248709873,
281421906,308745538)
mainDf1$x_t [1] <- population[1]
mainDf1$year<- 1790
#create data frame with year and population data
for (i in 2:23){
mainDf1$x_t [i] <- population[i]
mainDf1$year[i] <- mainDf3$year[i-1]+10
}
# create new column for the x lag of t-1
#do.call(rbind.data.frame, mainDf1$x_t)
mainDf1 <- slide(mainDf1,"x_t", "t", NewVar="xtLag1", slideBy = -1)
install.packages("nlme")
library(mgcv)
install.packages("nlme")
library(mgcv)
library(xlsx)
install.packages("nlme")
